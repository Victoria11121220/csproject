apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: listener-operator
    app.kubernetes.io/managed-by: kustomize
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: listener-operator
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      # Pod-level security context
      securityContext:
        runAsNonRoot: true
        fsGroup: 65534
        # seccompProfile:
        #   type: RuntimeDefault
      
      # Defining Volumes that Pods can use
      volumes:
      - name: config-volume
        configMap:
          name: listener-operator-config # Corresponding to the ConfigMap we created
      - name: secret-volume
        secret:
          secretName: listener-operator-secrets # Corresponding to the Secret we created

      # Init Container, used to check the availability of dependent services before starting the main container
      initContainers:
      - name: wait-for-postgres
        image: busybox:1.36 # Using a lightweight image
        # Loop nslookup until the address of postgres-service is successfully resolved
        command: ['sh', '-c', 'until nslookup postgres-service.listener-operator-system.svc.cluster.local; do echo "waiting for postgres..."; sleep 2; done;']

      # Container List
      containers:
      - command:
        - /manager
        args:
        - --leader-elect
        image: controller:latest
        name: manager
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        
        # Mount the volume defined above into the container
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config # Mount configuration
        - name: secret-volume
          mountPath: /etc/secrets # Mount the key
          
        # Container-level security context
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - "ALL"
            
        # Health check probes
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
          
        # Resource requests and limits
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
            
      # The service account used by the Pod
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10